name: Build, Test and Report Coverage

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'

    - name: Build with Gradle
      run: ./gradlew build

    - name: Run tests
      run: ./gradlew test

    - name: Generate Jacoco report
      run: ./gradlew jacocoTestReport

    - name: Download CodeClimate Test Reporter
      run: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter

    - name: Make cc-test-reporter executable
      run: chmod +x ./cc-test-reporter

    - name: Before-build coverage
      run: ./cc-test-reporter before-build
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}

    - name: Upload coverage to CodeClimate
      run: ./cc-test-reporter format-coverage build/reports/jacoco/test/jacocoTestReport.xml
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}

    - name: After-build coverage
      run: ./cc-test-reporter after-build --exit-code ${{ job.status }}
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}


Объяснение шагов
Checkout code: Использование действия actions/checkout для клонирования репозитория.
Set up JDK 11: Настройка JDK 11 с использованием действия actions/setup-java.
Build with Gradle: Сборка проекта с использованием Gradle.
Run tests: Запуск тестов с использованием Gradle.
Generate Jacoco report: Генерация отчета о покрытии кода с использованием JaCoCo.
Download CodeClimate Test Reporter: Загрузка cc-test-reporter.
Make cc-test-reporter executable: Присвоение права на выполнение cc-test-reporter.
Before-build coverage: Подготовка тестового репортера CodeClimate к сборке.
Upload coverage to CodeClimate: Форматирование и отправка отчета о покрытии кода на CodeClimate.
After-build coverage: Завершение работы тестового репортера CodeClimate.